{"version":3,"sources":["components/header/header.module.css","App.module.css","redux/profile-reducer.ts","api/api.ts","redux/dialogs-reducer.ts","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css","utils/object-helper.ts","redux/users-reducer.ts","components/Users/users.module.css","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","components/header/header.tsx","redux/auth-reducer.ts","components/header/headerContainer.tsx","components/Login/Login.tsx","redux/app-reducer.ts","redux/redux-store.ts","App.tsx","index.tsx","assets/images/pngwing.com.png","assets/images/loading-waiting.gif","components/common/Preloader/Preloader.tsx","components/common/Paginator/Paginator.module.css","utils/validators.ts","components/Users/FriendsForProfile.module.css","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/Friends.tsx","components/Users/FriendsForProfile.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","initialState","massageMyPost","id","massage","likesCounter","viewers","newPostText","profile","status","addPostAC","type","setStatus","payload","getUserProfile","userId","dispatch","a","userAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","savePhoto","file","photo","photos","saveProfile","getState","auth","message","messages","length","action","stopSubmit","_error","Promise","reject","profileReducer","state","newPost","unshift","filter","p","postId","instanseAxios","axios","create","baseURL","withCredentials","headers","getUsers","currentPage","pageSize","get","params","page","count","then","follow","post","unfollow","delete","console","warn","authAPI","me","login","email","password","rememberMe","captcha","logout","put","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","ADD_MASSAGE","dialogDat","name","massageData","addMassageAC","newMassageText","dialogsReducer","newMassage","push","updateObjectInArray","items","itemsId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURREN_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleFollowingInProgress","getUsersThunkCreator","totalCount","onPageChangedThunkCreator","pageNumber","followUnfollowFlow","apiMethod","actionCreator","bind","usersReducer","followed","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","component","validators","text","validate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","s","container","navContainer","item","icon","xmlns","fill","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","to","activeClassName","active","line","footer","href","Music","News","Settings","Header","isAuth","useState","drop","setDrop","header","headerContainer","headerContainerItems","leftSide","logoBlock","notificationBlock","playerBlock","rightSide","loginBlock","userBlock","onClick","userName","userPhoto","src","large","downIcon","dropDownContainer","onMouseLeave","dropDown","dropDownBlock","loginLink","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","getCaptchaUrlSuccess","getAuthUsersData","url","authReducer","HeaderContainer","this","React","Component","connect","profilePage","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","required","formSummeryError","loginBottom","useSelector","loginContainer","title","initialized","appReducer","reducers","combineReducers","dialogPage","usersPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","appBody","appWrapper","path","render","Suspense","fallback","Preloader","UsersContainer","exact","style","fontSize","margin","AppContainer","withRouter","SamuraiJSApp","ReactDOM","StrictMode","document","getElementById","preloader","value","maxLengthCreator","maxlength","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","selectedPage","e","User","user","userContainer","avatarBlock","small","usersPhoto","mainBlock","disabled","some","Users","usersBlock","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","getIsAuth","Friends","FriendsForProfile","index","friendBlock","match","PureComponent"],"mappings":"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","file":"static/js/main.3bf3b9a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__XKB1_\",\"headerContainer\":\"header_headerContainer__31chl\",\"headerContainerItems\":\"header_headerContainerItems__3gaXa\",\"leftSide\":\"header_leftSide__1kjCG\",\"logoBlock\":\"header_logoBlock__27LNs\",\"notificationBlock\":\"header_notificationBlock__1goNT\",\"playerBlock\":\"header_playerBlock__3YuCU\",\"rightSide\":\"header_rightSide__2fhJr\",\"loginBlock\":\"header_loginBlock__3xY9M\",\"userBlock\":\"header_userBlock__3KTQ0\",\"userName\":\"header_userName__EoRwq\",\"userPhoto\":\"header_userPhoto__2txrH\",\"downIcon\":\"header_downIcon__1dq-w\",\"loginLink\":\"header_loginLink__3H5V0\",\"dropDownContainer\":\"header_dropDownContainer__34AXU\",\"dropDown\":\"header_dropDown__2STC6\",\"dropDownBlock\":\"header_dropDownBlock__3uDtG\",\"line\":\"header_line__1EKLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBody\":\"App_appBody__3I9Te\",\"appWrapper\":\"App_appWrapper__26Jwk\"};","import {massageMyPostPropsType} from \"./store\";\r\nimport {profileAPI, userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {FormProfileDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm\";\r\nimport {ReducerRootType} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD_POST'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\n\r\nlet initialState = {\r\n    massageMyPost: [\r\n        {id: '1', massage: 'Avoiding the phrase \"I don\\'t have time...\", will soon help you to realize that you do have the time needed for just about anything you choose to accomplish in life.', likesCounter: '5', viewers: '20'},\r\n        {id: '2', massage: \"Experience shows that success is due less to ability than to zeal. The winner is he who gives himself to his work, body and soul.\", likesCounter: '12', viewers: '56'}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: '',\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state: ProfileStateType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost: massageMyPostPropsType = {\r\n                id: '5',\r\n                massage: action.newPostText,\r\n                likesCounter: '0',\r\n                viewers: '0'\r\n            }\r\n            state.massageMyPost.unshift(newPost);\r\n            return {...state, massageMyPost: [...state.massageMyPost]};\r\n        case SET_STATUS:\r\n            return {...state, status: action.payload.status};\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.payload.profile};\r\n        case DELETE_POST:\r\n            return {...state, massageMyPost: state.massageMyPost.filter(p => p.id != action.postId)};\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {...state, profile: {...state.profile, photos: action.payload.photo}};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostText: string) => {\r\n    return {\r\n        type: ADD_POST,\r\n        newPostText: newPostText,\r\n\r\n    } as const\r\n}\r\nexport const deletePostAC = (postId: string) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId: postId,\r\n\r\n    } as const\r\n}\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        payload: {profile}\r\n    } as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        payload: {status}\r\n    } as const\r\n}\r\nexport const savePhotoSuccess = (photo: File) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        payload: {photo}\r\n    } as const\r\n}\r\n\r\nexport const getUserProfile = (userId: string) => async (dispatch: Dispatch<ActionType>) => {\r\n    const response = await userAPI.getProfile(userId)\r\n    // console.log(response)\r\n        dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId: string) => async (dispatch: Dispatch<ActionType>) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<ActionType>) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n}\r\n\r\nexport const savePhoto = (file: File) => async (dispatch: Dispatch<ActionType>) => {\r\n    const response = await profileAPI.savePhoto(file)\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, ReducerRootType, unknown, ActionType>;\r\n\r\nexport const saveProfile = (profile: FormProfileDataType): ThunkType => async (dispatch: Dispatch<ActionType>, getState: () => ReducerRootType) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if(response.data.resultCode === 0) {\r\n        // @ts-ignore\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error!'\r\n        let action: any = stopSubmit('edit-profile', {_error: message})\r\n        dispatch(action)\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n\r\ntype ActionType = AddPostActionType\r\n    | SetUserProfileActionType\r\n    | SetStatusActionType\r\n    | DeletePostActionType\r\n    | SavePhotoSuccessActionType\r\nexport type SetUserProfileActionType = ReturnType<typeof setUserProfile>\r\nexport type DeletePostActionType = ReturnType<typeof deletePostAC>\r\nexport type AddPostActionType = ReturnType<typeof addPostAC>\r\nexport type SetStatusActionType = ReturnType<typeof setStatus>\r\nexport type SavePhotoSuccessActionType = ReturnType<typeof savePhotoSuccess>\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    fullName: string\r\n    photos: { large: string, small: string }\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    contacts: ContactsType\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string | null\r\n    vk: string | null\r\n    facebook: string | null\r\n    instagram: string | null\r\n    twitter: string | null\r\n    website: string | null\r\n    youtube: string | null\r\n    mainLink: string | null\r\n}\r\nexport type ProfileStateType = {\r\n    newPostText: string,\r\n    massageMyPost: Array<massageMyPostPropsType>,\r\n    profile: any,\r\n    status: string,\r\n}\r\n\r\nexport default profileReducer","import axios from \"axios\";\r\nimport {FormProfileDataType} from \"../components/Profile/ProfileInfo/ProfileDataForm\";\r\n\r\nconst instanseAxios = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'd6f0e227-87d6-4128-94b7-d0624916d5da',\r\n    },\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        // return instanseAxios.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        return instanseAxios.get(`users`, {\r\n            params: {\r\n                page: currentPage,\r\n                count: pageSize,\r\n            }\r\n        })\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instanseAxios.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instanseAxios.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId: string) {\r\n        console.warn('Obsolete method. Please use profileIPA object')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instanseAxios.get(`auth/me`)\r\n    },\r\n    login(email:string, password:string, rememberMe: boolean = false, captcha: string) {\r\n        return instanseAxios.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instanseAxios.delete(`auth/login`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return instanseAxios.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: string) {\r\n        return instanseAxios.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instanseAxios.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData()\r\n        formData.append('image', photoFile)\r\n        return instanseAxios.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile: FormProfileDataType){\r\n        return instanseAxios.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instanseAxios.get(`security/get-captcha-url`)\r\n    }\r\n}","import {\r\n    dialogDatPropsType,\r\n    DispatchActionType,\r\n    massageDataPropsType\r\n} from \"./store\";\r\n\r\nconst ADD_MASSAGE = 'ADD_MASSAGE'\r\n\r\nlet initialState = {\r\n    dialogDat: [\r\n        {name: 'Dima', id: '1'},\r\n        {name: 'Roma', id: '2'},\r\n        {name: 'Petya', id: '3'},\r\n        {name: 'Sasha', id: '4'}\r\n    ],\r\n    massageData: [\r\n        {massage: \"Hello, how are you?\", id: \"1\"},\r\n        {massage: \"I'm fine, and you?\", id: '2'},\r\n        {massage: \"I'am ok. Today is bad wather.\", id: '3'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state: DialogStateType = initialState, action: DispatchActionType) => {\r\n    switch (action.type) {\r\n        case ADD_MASSAGE:\r\n            let newMassage: massageDataPropsType = {\r\n                massage: action.newMassageText,\r\n                id: \"4\"\r\n            }\r\n            state.massageData.push(newMassage);\r\n            return {\r\n                ...state, massageData: [...state.massageData]\r\n                // ...state, newMassageText: '', massageData: [...state.massageData, newMassage]\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const addMassageAC = (newMassageText: string) => {\r\n    return {\r\n        type: ADD_MASSAGE,\r\n        newMassageText: newMassageText\r\n    } as const\r\n}\r\n\r\nexport type DialogStateType = {\r\n    dialogDat: Array<dialogDatPropsType>\r\n    massageData: Array<massageDataPropsType>\r\n}\r\nexport type AddMassageActionType = ReturnType<typeof addMassageAC>\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1sbiN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__3PRGM\",\"navContainer\":\"Navbar_navContainer__2ufoZ\",\"item\":\"Navbar_item__3Ni0a\",\"icon\":\"Navbar_icon__h5Tgj\",\"active\":\"Navbar_active__WiIEV\",\"line\":\"Navbar_line__2gIqT\",\"footer\":\"Navbar_footer__Urc36\"};","\r\nexport const updateObjectInArray = (items: Array<any>, itemsId: number, objPropName:string, newObjProps:{followed: boolean}) => {\r\n   return items.map(u => {\r\n    if (u[objPropName] === itemsId) {\r\n        return {...u, ...newObjProps}\r\n    }\r\n        return u\r\n    }\r\n)\r\n}","import {userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateObjectInArray} from \"../utils/object-helper\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURREN_PAGE = 'SET_CURREN_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState: ProfileStateType = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 2,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state: ProfileStateType = initialState, action: ActionType): ProfileStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userId, 'id', {followed: true} )\r\n                // users: state.users.map(u => u.id === action.payload.userId ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.payload.userId, 'id', {followed: false} )\r\n                // users: state.users.map(u => u.id === action.payload.userId ? {...u, followed: false} : u)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.payload.users]\r\n            }\r\n        case SET_CURREN_PAGE:\r\n            return {\r\n                ...state, currentPage: action.payload.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.payload.totalUsersCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.payload.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress:\r\n                    action.payload.isFetching\r\n                        ? [...state.followingInProgress, action.payload.userId]\r\n                        : [state.followingInProgress.filter(id => id != action.payload.userId)]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const followSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        payload: {userId,}\r\n    } as const\r\n}\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        payload: {userId,}\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<usersType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        payload: {users,}\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURREN_PAGE,\r\n        payload: {currentPage,}\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        payload: {totalUsersCount,}\r\n    } as const\r\n\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        payload: {isFetching,}\r\n    } as const\r\n}\r\nexport const toggleFollowingInProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        payload: {isFetching, userId}\r\n    } as const\r\n}\r\n\r\nexport const getUsersThunkCreator = (page: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        const response = await userAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalUsersCount(response.totalCount))\r\n    }\r\n}\r\nexport const onPageChangedThunkCreator = (pageNumber: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(pageNumber))\r\n        const response = await userAPI.getUsers(pageNumber, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(response.items))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionType>,\r\n                                  userId: number,\r\n                                  apiMethod: any,\r\n                                  actionCreator: any\r\n) => {\r\n    dispatch(toggleFollowingInProgress(true, userId))\r\n    const response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        let apiMethod = userAPI.follow.bind(userAPI)\r\n        let actionCreator = followSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: Dispatch<ActionType>) => {\r\n        let apiMethod = userAPI.unfollow.bind(userAPI)\r\n        let actionCreator = unfollowSuccess\r\n        followUnfollowFlow(dispatch, userId, apiMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport type ActionType = FollowActionType\r\n    | UnfollowActionType\r\n    | SetUsersActionType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountType\r\n    | ToggleIsFetchingType\r\n    | ToggleFollowingInProgressType\r\nexport type FollowActionType = ReturnType<typeof followSuccess>\r\nexport type UnfollowActionType = ReturnType<typeof unfollowSuccess>\r\nexport type SetUsersActionType = ReturnType<typeof setUsers>\r\nexport type SetCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport type SetTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport type ToggleIsFetchingType = ReturnType<typeof toggleIsFetching>\r\nexport type ToggleFollowingInProgressType = ReturnType<typeof toggleFollowingInProgress>\r\nexport type ProfileStateType = {\r\n    users: Array<usersType>\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<any>,\r\n}\r\nexport type usersType = {\r\n    id: number,\r\n    photos: { small: string },\r\n    followed: boolean,\r\n    name: string,\r\n    status: string,\r\n    location: LocationType,\r\n}\r\ntype LocationType = {\r\n    city: string,\r\n    country: string,\r\n}\r\n\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersBlock\":\"users_usersBlock__3in5S\",\"userContainer\":\"users_userContainer__37lcI\",\"line\":\"users_line__2I5mF\",\"avatarBlock\":\"users_avatarBlock__1qd0P\",\"mainBlock\":\"users_mainBlock__1ThtG\",\"status\":\"users_status__171ae\",\"name\":\"users_name__2O20F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"children\":\"FormsControls_children__3Wbtv\",\"formControl\":\"FormsControls_formControl__194iG\",\"error\":\"FormsControls_error__3Z6nB\",\"formSummeryError\":\"FormsControls_formSummeryError__29bQ-\",\"title\":\"FormsControls_title__1yxal\",\"loginContainer\":\"FormsControls_loginContainer__22QiB\",\"loginBottom\":\"FormsControls_loginBottom__5N8pr\"};","import React, {FC, ReactElement} from \"react\";\r\nimport styles from './FormsControls.module.css'\r\nimport {required} from \"../../../utils/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl: React.FC<any> = ({input, meta: {touched, error}, children, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                {/*<textarea {...input} {...props} />*/}\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<any> = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea  className={styles.children} {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const Input: React.FC<any> = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input className={styles.children} {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, component: any, validators: (any | undefined)[],  props = {}, text = \"\" ) => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/> {text}\r\n    </div>\r\n)","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\";\r\n\r\nexport const NavBar = () => {\r\n    return <nav className={s.container}>\r\n        <div className={s.navContainer}>\r\n            <div className={s.item}>\r\n                <div className={s.icon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                         stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                              d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    <NavLink to='/profile' activeClassName={s.active}>Profile</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n            {/*<div className={s.item}>*/}\r\n            {/*    <div className={s.icon}>*/}\r\n            {/*        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"*/}\r\n            {/*             stroke=\"currentColor\" stroke-width=\"2\">*/}\r\n            {/*            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"*/}\r\n            {/*                  d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"/>*/}\r\n            {/*        </svg>*/}\r\n            {/*    </div>*/}\r\n            {/*    <div>*/}\r\n            {/*        <NavLink to='/dialogs' activeClassName={s.active}>Messages</NavLink>*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n            <div className={s.item}>\r\n                <div className={s.icon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                         stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                              d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    <NavLink to='/users' activeClassName={s.active}>Users</NavLink>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.item}>\r\n                <div className={s.icon}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                         stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                              d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\"/>\r\n                    </svg>\r\n                </div>\r\n                <div>\r\n                    <NavLink to='/friends' activeClassName={s.active}>Friends</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={s.line}>\r\n            </div>\r\n            <div className={s.footer}>\r\n                <div>\r\n                    <a href=\"#\">\r\n                        Write to developer\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink to='/news' activeClassName={classes.active}>News</NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink to='/music' activeClassName={classes.active}>Music</NavLink>*/}\r\n            {/*</div>*/}\r\n            {/*<div className={classes.item}>*/}\r\n            {/*    <NavLink to='/settings' activeClassName={classes.active}>Settings</NavLink>*/}\r\n            {/*</div>*/}\r\n        </div>\r\n    </nav>\r\n}","import React from \"react\";\r\nimport classes from './Music.module.css'\r\n\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport classes from './News.module.css'\r\n\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport classes from './Settings.module.css'\r\n\r\n\r\nexport const Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport s from './header.module.css'\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\nimport userPhoto from \"../../assets/images/pngwing.com.png\";\r\n\r\ntype PropsType = {\r\n    login: string\r\n    isAuth: boolean\r\n    logout: () => void\r\n    profile: ProfileType\r\n}\r\n\r\nexport const Header = ({login, isAuth, logout, profile}: PropsType) => {\r\nconst [drop, setDrop] = useState<boolean>(false)\r\n\r\n    const onDropping = () => {\r\n      setDrop(!drop)\r\n    }\r\n    const onDroppingFalse = () => {\r\n      setDrop(false)\r\n    }\r\n\r\nconst redirectLogout = () =>{\r\n    logout()\r\n    return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return <header className={s.header}>\r\n        <div className={s.headerContainer}>\r\n            <div className={s.headerContainerItems}>\r\n                <div className={s.leftSide}>\r\n                    <div className={s.logoBlock}>\r\n                        {<NavLink to={'/profile'}>\r\n                            <svg viewBox=\"0 0 276 48\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M83.4343 29.7801C83.4343 33.4241 80.0416 36.0629 75.2667 36.0629H64.0835V13.4451H74.8897C79.539 13.4451 82.806 15.9582 82.806 19.4765C82.806 21.8639 81.5495 23.3718 79.6646 24.2514C81.6751 25.0053 83.4343 27.0157 83.4343 29.7801ZM68.984 17.5917V22.4922H74.7641C76.5233 22.4922 77.6542 21.487 77.6542 20.1048C77.6542 18.7226 76.3976 17.5917 74.7641 17.5917H68.984ZM75.2667 31.9163C77.1516 31.9163 78.5338 30.7854 78.5338 29.1519C78.5338 27.5184 77.2772 26.3875 75.2667 26.3875H68.984V31.9163H75.2667Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M101.905 35.9372L94.1148 27.0158H92.8582V35.9372H87.832V13.4451H92.8582V22.1152H94.1148L101.654 13.4451H107.56L98.1357 24.2514L108.439 35.9372H101.905Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M108.439 24.754C108.439 17.9686 113.466 13.0681 120.502 13.0681C127.539 13.0681 132.565 17.9686 132.565 24.754C132.565 31.5393 127.539 36.4398 120.502 36.4398C113.466 36.4398 108.439 31.5393 108.439 24.754ZM127.288 24.754C127.288 20.4817 124.523 17.5917 120.502 17.5917C116.481 17.5917 113.717 20.4817 113.717 24.754C113.717 29.0262 116.481 31.9163 120.502 31.9163C124.523 31.9163 127.288 29.0262 127.288 24.754Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M151.79 13.4451H156.817V35.9372H151.79V26.8901H141.738V35.9372H136.712V13.4451H141.738V22.3665H151.79V13.4451Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M167.623 35.9372V17.9686H159.832V13.4451H180.314V17.9686H172.523V35.9372H167.623Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M201.926 23.3718V35.9372H198.282L197.277 32.4189C196.146 34.3037 193.759 36.4398 190.115 36.4398C185.591 36.4398 182.324 33.4241 182.324 29.2775C182.324 25.1309 185.591 22.2409 192.251 22.2409H197.151C196.9 19.3508 195.392 17.3404 192.628 17.3404C190.366 17.3404 188.858 18.5969 188.104 19.9791L183.581 19.2252C184.712 15.3299 188.607 13.0681 192.879 13.0681C198.408 13.0681 201.926 16.8377 201.926 23.3718ZM197.026 26.1362H192.377C188.607 26.1362 187.35 27.3927 187.35 29.0262C187.35 30.911 188.858 32.1676 191.371 32.1676C194.638 32.1676 197.026 29.7802 197.026 26.1362Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M221.277 35.9372L213.487 27.0158H212.23V35.9372H207.204V13.4451H212.23V22.1152H213.487L221.026 13.4451H226.932L217.508 24.2514L227.811 35.9372H221.277Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M236.858 35.9372V17.9686H229.068V13.4451H249.55V17.9686H241.759V35.9372H236.858Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M274.68 26.1362H256.586C257.089 29.6545 259.602 31.9163 263.371 31.9163C266.01 31.9163 268.021 30.7854 269.152 29.1519L273.801 29.9058C272.167 34.1781 267.769 36.4398 262.994 36.4398C256.209 36.4398 251.309 31.5393 251.309 24.754C251.309 17.9686 256.209 13.0681 262.994 13.0681C269.78 13.0681 274.68 17.9686 274.68 24.5027C274.806 25.1309 274.68 25.6336 274.68 26.1362ZM256.963 22.2409H269.403C268.523 19.4765 266.261 17.466 263.12 17.466C260.104 17.3404 257.717 19.3508 256.963 22.2409Z\"\r\n                                    fill=\"black\"/>\r\n                                <path\r\n                                    d=\"M0 23.04C0 12.1788 0 6.74826 3.37413 3.37413C6.74826 0 12.1788 0 23.04 0H24.96C35.8212 0 41.2517 0 44.6259 3.37413C48 6.74826 48 12.1788 48 23.04V24.96C48 35.8212 48 41.2517 44.6259 44.6259C41.2517 48 35.8212 48 24.96 48H23.04C12.1788 48 6.74826 48 3.37413 44.6259C0 41.2517 0 35.8212 0 24.96V23.04Z\"\r\n                                    fill=\"#0077FF\"/>\r\n                                <path\r\n                                    d=\"M25.54 34.5801C14.6 34.5801 8.3601 27.0801 8.1001 14.6001H13.5801C13.7601 23.7601 17.8 27.6401 21 28.4401V14.6001H26.1602V22.5001C29.3202 22.1601 32.6398 18.5601 33.7598 14.6001H38.9199C38.0599 19.4801 34.4599 23.0801 31.8999 24.5601C34.4599 25.7601 38.5601 28.9001 40.1201 34.5801H34.4399C33.2199 30.7801 30.1802 27.8401 26.1602 27.4401V34.5801H25.54Z\"\r\n                                    fill=\"white\"/>\r\n                            </svg>\r\n                        </NavLink>}\r\n                    </div>\r\n                    <div className={s.notificationBlock}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                             stroke=\"currentColor\" stroke-width=\"2\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"/>\r\n                        </svg>\r\n                    </div>\r\n                    <div className={s.playerBlock}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                             stroke=\"currentColor\" stroke-width=\"2\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                  d=\"M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3\"/>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n                <div className={s.rightSide}>\r\n                    <div className={s.loginBlock}>\r\n                        {isAuth && profile.photos\r\n                            ? <div>\r\n                            <div className={s.userBlock} onClick={onDropping}>\r\n                                <div className={s.userName}>{login}</div>\r\n                                <div className={s.userPhoto}><img src={profile.photos.large || userPhoto}/></div>\r\n                                <div className={s.downIcon}>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\"\r\n                                         viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19 9l-7 7-7-7\"/>\r\n                                    </svg>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                                {drop && <div className={s.dropDownContainer} onMouseLeave={onDroppingFalse}>\r\n                                    <div className={s.dropDown}>\r\n                                        <div className={s.dropDownBlock}>\r\n                                            <NavLink to={'/profile'}>\r\n                                                <div className={s.userPhoto}>\r\n                                                    <img\r\n                                                        src={profile.photos.large || userPhoto}/>\r\n                                                </div>\r\n                                                <div className={s.userName}>{login}\r\n                                                <p>Go to profile</p>\r\n                                                </div>\r\n                                            </NavLink>\r\n                                        </div>\r\n                                        <div className={s.line}></div>\r\n                                        <div className={s.dropDownBlock}>\r\n                                            <button onClick={redirectLogout}>Log out</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>}\r\n                            </div>\r\n                            : <div className={s.loginLink}>\r\n                                <NavLink to={'/login'}>Login</NavLink>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </header>\r\n}","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ReducerRootType} from './redux-store'\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState: AuthDataType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nconst authReducer = (state: AuthDataType = initialState, action: ActionType): AuthDataType => {\r\n    switch (action.type) {\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        payload: {userId, login, email, isAuth}\r\n    } as const\r\n}\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string | null) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        payload: {captchaUrl}\r\n    } as const\r\n}\r\n\r\nexport const getAuthUsersData = () => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captchaUrl: string): ThunkType => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captchaUrl)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUsersData())\r\n        dispatch(getCaptchaUrlSuccess(null))\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error!'\r\n        let action: any = stopSubmit('login', {_error: message})\r\n        dispatch(action)\r\n    }\r\n}\r\nexport const logout = () => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch<ActionType>) => {\r\n    let response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n\r\n}\r\n\r\nexport type AuthType = {\r\n    resultCode: number | null\r\n    messages: []\r\n    data: AuthDataType\r\n}\r\nexport type AuthDataType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl?: string | null\r\n}\r\ntype ThunkType = ThunkAction<void, ReducerRootType, unknown, ActionType>;\r\nexport type ActionType = SetUserDataActionType | GetCaptchaUrlSuccessActionType\r\nexport type SetUserDataActionType = ReturnType<typeof setAuthUserData>\r\nexport type GetCaptchaUrlSuccessActionType = ReturnType<typeof getCaptchaUrlSuccess>\r\n\r\nexport default authReducer\r\n\r\n","import React from \"react\";\r\nimport {Header} from \"./header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthDataType, logout} from \"../../redux/auth-reducer\";\r\nimport {ReducerRootType} from \"../../redux/redux-store\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype AddedPropsType = {\r\n    profile: ProfileType\r\n}\r\n\r\nclass HeaderContainer extends React.Component<any> {\r\n\r\n\r\n    render() {\r\n\r\n        return <Header isAuth={this.props.isAuth} profile={this.props.profile}\r\n                       login={this.props.login} logout={this.props.logout}/>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: ReducerRootType):AuthDataType & AddedPropsType => {\r\n    return {\r\n       isAuth: state.auth.isAuth,\r\n       login: state.auth.login,\r\n       userId: state.auth.userId,\r\n       email: state.auth.email,\r\n       profile: state.profilePage.profile,\r\n   }\r\n\r\n}\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {ReducerRootType} from \"../../redux/redux-store\";\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captchaUrl?: string | null\r\n}\r\n\r\ntype PropsType = InjectedFormProps<FormDataType> & any\r\n// React.FC<InjectedFormProps<FormDataType>>\r\nconst LoginForm = (props: PropsType) => {\r\n    const {handleSubmit, error, captchaUrl} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', Input, [required])}\r\n            {createField('Password', 'password', Input, [required], {type: 'password'})}\r\n            {createField(null, 'rememberMe', Input, [], {type: 'checkbox'}, 'remember me')}\r\n            {captchaUrl && <img src={captchaUrl}/>}\r\n            {captchaUrl && createField(\"Symbols from image\", 'captchaUrl', Input, [required])}\r\n            {error && <div className={s.formSummeryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button className={s.loginBottom}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\nconst isAuth = useSelector<ReducerRootType, boolean>(state => state.auth.isAuth)\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captchaUrl)\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div className={s.loginContainer}>\r\n\r\n        <div className={s.title}>Sign In</div>\r\n        <p>login: larionovra@gmail.com</p>\r\n        <p>password: qwerty1234</p>\r\n        {/*// @ts-ignore*/}\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: ReducerRootType): any => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUsersData} from \"./auth-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {ReducerRootType} from \"./redux-store\";\r\n\r\nexport type InitType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: InitType = initialState, action: ActionType): InitType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case 'INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionType = InitializedSuccessActionType\r\n\r\nexport type InitializedSuccessActionType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => {\r\n    return {\r\n        type: 'INITIALIZED_SUCCESS',\r\n    } as const\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, ReducerRootType, unknown, ActionType>;\r\nexport const initializeApp = (): ThunkType => (dispatch) => {\r\n   let promise = dispatch(getAuthUsersData())\r\n    promise\r\n        .then(()=>{\r\n        dispatch(initializedSuccess())\r\n        }\r\n    )\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer,\r\n});\r\n\r\nexport type ReducerRootType = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store","import React from 'react';\r\nimport './App.css';\r\nimport {NavBar} from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport s from './App.module.css'\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nimport HeaderContainer from \"./components/header/headerContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp, InitType} from \"./redux/app-reducer\";\r\nimport store, {ReducerRootType} from \"./redux/redux-store\";\r\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\ntype AppPropsType = {\r\n    initializeApp: ()=>any\r\n    initialized: InitType\r\n}\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n    render() {\r\n        if(!this.props.initialized) {\r\n            return <Preloader />\r\n        }\r\n        return (\r\n            <div className={s.appBody}>\r\n                <HeaderContainer/>\r\n                <div className={s.appWrapper}>\r\n                    <NavBar/>\r\n                    <Switch>\r\n                        <Route path='/dialogs'\r\n                               render={() => {\r\n                                   return  <React.Suspense fallback={<Preloader />}>\r\n                                   <DialogsContainer/>\r\n                                   </React.Suspense>\r\n                               }}/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={() => {\r\n                                   return  <React.Suspense fallback={<Preloader />}>\r\n                                   <ProfileContainer/>\r\n                                   </React.Suspense>\r\n                               }}/>\r\n                        <Route path='/music'\r\n                               render={() => <Music/>}/>\r\n                        <Route path='/news'\r\n                               render={() => <News/>}/>\r\n                        <Route path='/settings'\r\n                               render={() => <Settings/>}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='/friends'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route path='/login'\r\n                               render={() => <Login/>}/>\r\n                        <Route path='/' exact><Redirect to='/profile'/></Route>\r\n                        <Route path=\"*\"\r\n                               render={()=> <div style={{fontSize: \"xx-large\", margin: \"0 auto\",}}>404 PAGE NOT FOUND</div>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: ReducerRootType):InitType => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App)\r\n\r\nconst SamuraiJSApp = () => {\r\n return (\r\n     <HashRouter>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n)\r\n}\r\n\r\nexport default SamuraiJSApp","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n\r\n// let rerenderEntireTree = (state: StoreType) => {\r\n\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <SamuraiJSApp />\r\n           {/* <BrowserRouter>*/}\r\n           {/*<Provider store={store}>*/}\r\n           {/* <App/>*/}\r\n           {/*</Provider>*/}\r\n           {/*     </BrowserRouter>*/}\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n// }\r\n// rerenderEntireTree(store.getState());\r\n// store.subscribe(()=>rerenderEntireTree(store.getState()));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export default __webpack_public_path__ + \"static/media/pngwing.com.157e4958.png\";","export default __webpack_public_path__ + \"static/media/loading-waiting.ccaed95b.gif\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/loading-waiting.gif\";\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () =>{\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__x3JVP\",\"selectedPage\":\"Paginator_selectedPage__3XK0K\",\"page\":\"Paginator_page__12C5g\"};","\r\nexport const required = (value: any) => {\r\n    if (value) return undefined\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxlength: any) => (value: any) => {\r\n    if (value.length > maxlength) return `Max length ${maxlength} symbols`\r\n    return undefined\r\n\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendBlock\":\"FriendsForProfile_friendBlock__15Xt6\",\"usersPhoto\":\"FriendsForProfile_usersPhoto__3BuzU\",\"userName\":\"FriendsForProfile_userName__1CCvR\"};","import React, {useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\n\r\ntype PropsType = {\r\n    onPageChanged: (p: number) => void\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    portionSize: number\r\n\r\n}\r\n\r\nexport const Paginator = ({ pageSize, totalItemsCount, onPageChanged, currentPage, portionSize, ...props}: PropsType) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState<number>(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return (\r\n            <div className={s.paginator}>\r\n                {portionNumber > 1 &&\r\n                    <button onClick={()=>{setPortionNumber(portionNumber - 1)}}>←</button> }\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n                    .map(p => {\r\n                    return (\r\n                        <span\r\n                            className={currentPage === p ? s.selectedPage + ' ' + s.page : s.page}\r\n                            onClick={(e) => {\r\n                                onPageChanged(p);\r\n                            }}\r\n                        key={p}>{p}</span>\r\n                    )\r\n                })}\r\n                {portionCount > portionNumber &&\r\n                <button onClick={()=>{setPortionNumber(portionNumber + 1)}}>→</button> }\r\n            </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/pngwing.com.png\";\r\nimport {usersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    user: usersType,\r\n    follow: (userId: number) => void,\r\n    unfollow: (userId: number) => void,\r\n    followingInProgress: Array<any>,\r\n}\r\n\r\nexport const User = ({user, followingInProgress, unfollow, follow}: PropsType) => {\r\n    return (\r\n        <>\r\n            <div className={s.userContainer}>\r\n                <div className={s.avatarBlock}>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={s.usersPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={s.mainBlock}>\r\n                    <div className={s.name}>{user.name}</div>\r\n                    <div className={s.status}>{user.status ? user.status : \" \"}</div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }\r\n                                      }>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }\r\n                                      }>Follow</button>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport {usersType} from \"../../redux/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport s from './users.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    onPageChanged: (p: number) => void\r\n    users: Array<usersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\r\n    followingInProgress: Array<any>,\r\n}\r\n\r\nexport const Users = ({\r\n                          pageSize,\r\n                          totalUsersCount,\r\n                          onPageChanged,\r\n                          currentPage,\r\n                          users,\r\n                          follow,\r\n                          unfollow,\r\n                          followingInProgress,\r\n                          toggleFollowingInProgress,\r\n                          ...props\r\n                      }: PropsType) => {\r\n    let portionSize = 10\r\n    return (\r\n        <div className={s.usersBlock}>\r\n            <Paginator onPageChanged={onPageChanged} pageSize={pageSize} totalItemsCount={totalUsersCount}\r\n                          currentPage={currentPage} portionSize={portionSize}/>\r\n            <>\r\n                {\r\n                    users.map(u => <User user={u} key={u.id} follow={follow} unfollow={unfollow}\r\n                                         followingInProgress={followingInProgress}/>\r\n                    )}\r\n            </>\r\n        </div>\r\n    )\r\n}","import {ReducerRootType} from \"./redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state: ReducerRootType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true)\r\n    }\r\n)\r\nexport const getPageSize = (state: ReducerRootType) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state: ReducerRootType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state: ReducerRootType) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state: ReducerRootType) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state: ReducerRootType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\nexport const getIsAuth = (state: ReducerRootType) => {\r\n    return state.auth.userId\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {usersType} from \"../../redux/users-reducer\";\r\nimport {User} from \"./User\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from './users.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    users: Array<usersType>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followingInProgress: Array<any>,\r\n    isAuth: boolean\r\n}\r\n\r\nexport const Friends = ({\r\n                          users,\r\n                          follow,\r\n                          unfollow,\r\n                          followingInProgress,\r\n                            isAuth,\r\n                          ...props\r\n                      }: PropsType) => {\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={s.usersBlock}>\r\n            <div>\r\n                {\r\n                    users.map(u => u.followed != false\r\n                        ? <User user={u} key={u.id} follow={follow} unfollow={unfollow}\r\n                                         followingInProgress={followingInProgress} />\r\n                        : ''\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {usersType} from \"../../redux/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/pngwing.com.png\";\r\nimport s from './FriendsForProfile.module.css'\r\n\r\ntype PropsType = {\r\n    users: Array<usersType>\r\n}\r\n\r\nexport const FriendsForProfile = ({\r\n                          users,\r\n                      }: PropsType) => {\r\n    return (\r\n            <>\r\n                {\r\n                    users.map((u , index)=> u.followed != false\r\n                        ? <div key={u.id} className={s.friendBlock}>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto} className={s.usersPhoto}/>\r\n                                <div className={s.userName}>{u.name}</div>\r\n                            </NavLink>\r\n                        </div>\r\n                        : ''\r\n                    )}\r\n            </>\r\n    )\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {ReducerRootType} from \"../../redux/redux-store\";\r\nimport {\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    usersType,\r\n    toggleFollowingInProgress,\r\n    getUsersThunkCreator,\r\n    onPageChangedThunkCreator,\r\n    follow, unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress, getIsAuth,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selectors\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {PathParamsType} from \"../Profile/ProfileContainer\";\r\nimport {Friends} from \"./Friends\";\r\nimport {FriendsForProfile} from \"./FriendsForProfile\";\r\n\r\ntype MapStateType = {\r\n    users: Array<usersType>\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: Array<any>,\r\n    isAuth: any\r\n}\r\n\r\ntype MapDispatchType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (users: Array<usersType>) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => void\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    onPageChangedThunkCreator: (pageNumber: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateType & MapDispatchType & RouteComponentProps<PathParamsType>\r\n\r\nclass UsersContainer extends React.PureComponent<UsersPropsType> {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props\r\n        if (this.props.match.url == '/friends' || this.props.match.url == '/profile') {\r\n            this.props.getUsersThunkCreator(1, 100)\r\n        } else {\r\n        this.props.getUsersThunkCreator(currentPage, pageSize)\r\n        }\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props\r\n        this.props.onPageChangedThunkCreator(pageNumber, pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            {this.props.match.url === '/users' &&\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                users={this.props.users}\r\n                toggleFollowingInProgress={this.props.toggleFollowingInProgress}\r\n                onPageChanged={this.onPageChanged}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />}\r\n            {this.props.match.url === '/friends' && <Friends\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n                isAuth={this.props.isAuth}\r\n\r\n            />}\r\n            {this.props.match.url === '/profile' && <FriendsForProfile\r\n                users={this.props.users}\r\n            />}\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: ReducerRootType): MapStateType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n        isAuth: getIsAuth(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n        toggleFollowingInProgress,\r\n        getUsersThunkCreator,\r\n        onPageChangedThunkCreator,\r\n    }), withRouter,\r\n)(UsersContainer)"],"sourceRoot":""}